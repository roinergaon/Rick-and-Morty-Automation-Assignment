{"name": "first image Test", "status": "failed", "statusDetails": {"message": "AssertionError: Anchorwoman from Earth (Replacement Dimension) and Wasp Morty from Earth (Wasp Dimension)\nassert 'Earth (Repla...nt Dimension)' == 'Earth (Wasp Dimension)'\n  - Earth (Wasp Dimension)\n  + Earth (Replacement Dimension)", "trace": "self = <UI_Rick_and_Morhy.tests.test_google_images_page.TestGoogleImagesPage object at 0x000001FF84BBAAF0>\n\n    @allure.description(\"Save first image and verify locations are the same\")\n    @allure.title(\"first image Test\")\n    @allure.feature(\"first image\")\n    @allure.tag(\"first image\")\n    def test_tc_01(self):\n        # get first character name and id\n        randomly_two_characters = self.characters\n        characters_data = get_character_details(randomly_two_characters, characters)\n    \n        # get position based on id\n        position = calculate_position(characters_data[\"first_character_id\"])\n    \n        google_page = GooglePage(self.driver)\n        google_page.open_the_english_version() # if it opens with the Hebrew version click the English one\n        google_page.open_google_images() #Open google images\n        google_images_page = GoogleImagesPage(self.driver)\n        google_images_page.enter_data(f\"'Rick and Morty {characters_data['first_character_name']}\") #insert relevant data for first character\n        google_images_page.click_element(google_images_page.search_button) #click the search button\n    \n        images_results = google_images_page.find_all_elements(google_images_page.images_results) #find all search results\n        elected_image_by_position = images_results[position - 1] # reduce 1 in order to click the right picture\n        google_images_page.click_webElement_element(elected_image_by_position) #click picture based on position\n        opened_image = google_images_page.find_element(google_images_page.selected_image) # find the clicked picture element\n        save_image(opened_image, characters_data['first_character_name'], characters_data['first_character_id']) # save image in project directory\n>       assert characters_data[\"first_character_location\"] == characters_data[\n            \"second_character_location\"], f\"{characters_data['first_character_name']} from {characters_data['first_character_location']} and {characters_data['second_character_name']} from {characters_data['second_character_location']}\"\nE       AssertionError: Anchorwoman from Earth (Replacement Dimension) and Wasp Morty from Earth (Wasp Dimension)\nE       assert 'Earth (Repla...nt Dimension)' == 'Earth (Wasp Dimension)'\nE         - Earth (Wasp Dimension)\nE         + Earth (Replacement Dimension)\n\nUI_Rick_and_Morhy\\tests\\test_google_images_page.py:36: AssertionError"}, "description": "Save first image and verify locations are the same", "attachments": [{"name": "fAnchorwoman_511", "source": "3572b8ec-2991-4032-9e4e-c26a01681d7d-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "55f54789-941b-41d3-aa25-1be307842e5b-attachment.txt", "type": "text/plain"}], "start": 1732219167519, "stop": 1732219178226, "uuid": "57baa6c3-5961-402c-b6ea-9b82678dbf50", "historyId": "6b78ca0c17c004118a0072d0b28e9203", "testCaseId": "6b78ca0c17c004118a0072d0b28e9203", "fullName": "UI_Rick_and_Morhy.tests.test_google_images_page.TestGoogleImagesPage#test_tc_01", "labels": [{"name": "feature", "value": "first image"}, {"name": "tag", "value": "first image"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "UI_Rick_and_Morhy.tests"}, {"name": "suite", "value": "test_google_images_page"}, {"name": "subSuite", "value": "TestGoogleImagesPage"}, {"name": "host", "value": "ILSDE-100186"}, {"name": "thread", "value": "30616-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "UI_Rick_and_Morhy.tests.test_google_images_page"}]}